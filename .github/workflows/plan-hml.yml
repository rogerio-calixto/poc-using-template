name: plan-hml-pipeline

on:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  infracost:
    runs-on: ubuntu-latest
    env:
      working-directory: .

    name: Run Infracost
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        
      - name: Install terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON

      - name: Terraform init
        run: terraform init -reconfigure -backend=true -backend-config="config/hml/backend.hcl" -backend-config="access_key=${{ env.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ env.AWS_SECRET_ACCESS_KEY }}"
        working-directory: ${{ env.working-directory }}

      - name: Terraform plan
        run: terraform plan -var-file="config/hml/terraform.tfvars" -out tfplan.binary
        working-directory: ${{ env.working-directory }}

      - name: Terraform show
        run: terraform show -json tfplan.binary > plan.json
        working-directory: ${{ env.working-directory }}

      - name: Setup Infracost
        uses: infracost/actions/setup@v1
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
          
      - name: Generate Infracost JSON
        run: |
          infracost breakdown --path=. --show-skipped \
                              --terraform-plan-flags="-var-file=config/hml/terraform.tfvars"
        working-directory: ${{ env.working-directory }}  

  terraform-plan:
    name: 'terraform plan hml'
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: '.'

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        id: init
        run: terraform init -backend=true -backend-config="config/hml/backend.hcl" -backend-config="access_key=${{ env.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ env.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan-hml
        run: terraform plan -no-color -var-file="config/hml/terraform.tfvars"